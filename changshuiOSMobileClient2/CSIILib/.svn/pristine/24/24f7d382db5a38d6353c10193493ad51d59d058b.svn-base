//
//  SplashScreenViewController.m
//  MobileClient
//
//  Created by 张海亮 on 13-7-11.
//  Copyright (c) 2013年 pro. All rights reserved.
//

#import "SplashScreenViewController.h"
#import "FirstOpenViewController.h"
#import "Context.h"
@interface SplashScreenViewController ()
{
    BOOL isFirstFinish;
    NSTimer *loadingStrUpdateTimer;
    UILabel *loadingStrLabel;
    int loadingStrState;
    UIActivityIndicatorView *indicatorView;
    UIImageView*LogoView;
    NSMutableArray*imageArray;
    int count;
    UIImageView*lastImg;
}
@end

@implementation SplashScreenViewController
@synthesize localStorageSplash;
@synthesize movie;

- (id)init
{
    self = [super init];
    if (self)
    {
        // Custom initialization
        self.view=[[UIView alloc]initWithFrame:[self getScreenBoundsForCurrentOrientation]];
        self.view.autoresizesSubviews = YES;
        self.view.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
        self.view.backgroundColor = [UIColor clearColor];
        //启动图片
        count = 0;
        
        UIImageView *backImage = [[UIImageView alloc] initWithFrame:self.view.frame];
        if (IOS8_OR_LATER) {
            backImage.image = [UIImage imageNamed:@"qiDong3"];
        }else
        {
            backImage.image = [UIImage imageNamed:@"qiDong"];
        }
        [self.view addSubview:backImage];

//        UIImage *prizeImage = [UIImage imageNamed:@"qidong_prize"];
//        UIImageView *prizeImageView = [[UIImageView alloc]initWithFrame:CGRectMake(0, self.view.frame.size.height-prizeImage.size.height-80, self.view.frame.size.width, prizeImage.size.height)];
//        prizeImageView.image = prizeImage;
//        [self.view addSubview:prizeImageView];
//        
//        UIImage *logoImage = [UIImage imageNamed:@"qidong_logo"];
//        UIImageView *logoImageView = [[UIImageView alloc]initWithFrame:CGRectMake(0, 80, self.view.frame.size.width, logoImage.size.height)];
//        logoImageView.image = logoImage;
//        [self.view addSubview:logoImageView];
        
//        if (ScreenHeight > 480) {
//            backImage.image = [UIImage imageNamed:@"Default-568h"];
//        } else {
//            backImage.image = [UIImage imageNamed:@"Default"];
//        }
        backImage.tag = 0;
        

//        NSString *filePath = [[MobileBankSession sharedInstance] getMarketData];
//        NSLog(@"splash filePath=%@",filePath);
//        NSURL *url = [NSURL fileURLWithPath:filePath];

/* 禁止播放视频
        NSURL *url = [NSURL fileURLWithPath:[[NSBundle mainBundle]pathForResource:@"iphone_loading"ofType:@"mp4"]];

        self.movie=[[MPMoviePlayerController alloc]initWithContentURL:url];
        
        //很重要的一点是在头文件里已经把movie变为属性了，@property（nonamaic,strong），如果不写为属性就会黑屏，目前不知道为什么
        [self.movie prepareToPlay];
        self.movie.controlStyle=MPMovieControlStyleNone;
        self.movie.shouldAutoplay=YES;
        self.movie.fullscreen=YES;
        self.movie.scalingMode=MPMovieScalingModeFill;
        self.movie.view.frame=[self getScreenBoundsForCurrentOrientation];
        self.movie.view.autoresizesSubviews = YES;
        self.movie.view.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
        self.movie.initialPlaybackTime=0;
        self.movie.endPlaybackTime=3;

        [self.view addSubview:self.movie.view];
        [self.movie play];
        //[self.view insertSubview:self.movie.view atIndex:1];
        
        [[NSNotificationCenter defaultCenter]addObserver:self selector:@selector(myMovieFinishedCallback:) name:MPMoviePlayerPlaybackDidFinishNotification object:movie];
 */
        
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(initDataFinsh:) name:@"APPInitDataFinish" object:nil];
        
        
        loadingStrLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, 100, (IPAD)?50:30)];
        if (IPAD) {
            loadingStrLabel.center = CGPointMake(self.view.frame.size.width/2+35, self.view.frame.size.height - 155);
        }else{
            loadingStrLabel.center = CGPointMake(self.view.frame.size.width/2+35, self.view.frame.size.height - 80);
        }
        
        loadingStrLabel.backgroundColor = [UIColor clearColor];
        loadingStrLabel.textAlignment = NSTextAlignmentLeft;
        loadingStrLabel.text = @"加载中...";
        loadingStrLabel.textColor = [UIColor lightGrayColor];
        loadingStrLabel.font = [UIFont boldSystemFontOfSize:(IPAD)?22:14];
        loadingStrState = 3;
//        [self.view addSubview:loadingStrLabel];
        
        
        indicatorView= [[UIActivityIndicatorView alloc] initWithFrame:CGRectMake(loadingStrLabel.frame.origin.x-((IPAD)?50:30)+35, loadingStrLabel.frame.origin.y-20, (IPAD)?50:30, (IPAD)?50:30)];
        indicatorView.activityIndicatorViewStyle=UIActivityIndicatorViewStyleGray;
        indicatorView.hidesWhenStopped=YES;
//        [self.view addSubview:indicatorView];
        
        loadingStrUpdateTimer = [NSTimer scheduledTimerWithTimeInterval:1.0f target:self
                                                         selector:@selector(handleLoadingStrUpdate) userInfo:nil repeats:YES];
    }
    return self;
}

-(void)handleLoadingStrUpdate
{
    if(1 == loadingStrState){
        loadingStrState = 2;
        loadingStrLabel.text = @"加载中..";
    }
    else if(2 == loadingStrState){
        loadingStrState = 3;
        loadingStrLabel.text = @"加载中...";
    }
    else if(3 == loadingStrState){
        loadingStrState = 1;
        loadingStrLabel.text = @"加载中.";
    }
}

- (void)onCloseSplashScreen:(NSNotification *)note
{//网页加载完成,收到的通知
    [self.movie.view removeFromSuperview];
    [self performSelectorOnMainThread:@selector(switchView) withObject:nil waitUntilDone:NO];
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:NO];
    [indicatorView startAnimating];
}

-(void)viewDidAppear:(BOOL)animated{
    [super viewDidAppear:animated];
     [[UIApplication sharedApplication] setStatusBarStyle:UIStatusBarStyleDefault animated:NO];
}

-(void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
    [loadingStrUpdateTimer invalidate];
    [indicatorView stopAnimating];
}

-(void)myMovieFinishedCallback:(NSNotification *)noto
{
    //动画加载完,收到消息
    MPMoviePlayerController *theMovie=[noto object];
    [theMovie.view removeFromSuperview];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:MPMoviePlayerPlaybackDidFinishNotification object:theMovie];
    [self performSelectorOnMainThread:@selector(switchView) withObject:nil waitUntilDone:NO];
}

-(void)initDataFinsh:(NSNotification *)noto
{
    if (![Context getNSUserDefaultskeyStr:@"isFirstOpenApp"]) {    //首次打开app,导航图片
        FirstOpenViewController*firstopenController = [[FirstOpenViewController alloc] init];
        [self.navigationController pushViewController:firstopenController animated:NO];
    }else
    [self.navigationController popToRootViewControllerAnimated:NO];
//    currentControllers = self.navigationController.viewControllers;
}

- (void)switchView
{
    if (!isFirstFinish)
    {
        isFirstFinish = YES;
        [movie.view removeFromSuperview];
        return;
    }
    [self.navigationController popToRootViewControllerAnimated:NO];
}


- (void)viewDidLoad
{
    [super viewDidLoad];
    
    
#if __IPHONE_OS_VERSION_MAX_ALLOWED >= 70000
    if (IOS7_OR_LATER)
    {
        if ([self respondsToSelector:@selector(edgesForExtendedLayout)])
            self.edgesForExtendedLayout = UIRectEdgeNone;//表示视图是否覆盖到四周的区域，默认是UIRectEdgeAll，即上下左右四个方向都会覆盖
        self.extendedLayoutIncludesOpaqueBars = NO;
        self.modalPresentationCapturesStatusBarAppearance = NO;
        self.automaticallyAdjustsScrollViewInsets = NO;//禁止scroll view的内容自动调整
    }
#endif
}

- (void)viewDidUnload
{
    [super viewDidUnload];
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    if(UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPhone)
    {
        return (interfaceOrientation == UIInterfaceOrientationPortrait);
    }
    else
    {
        return UIInterfaceOrientationIsLandscape(interfaceOrientation);
    }
}

-(CGRect)getScreenBoundsForCurrentOrientation
{
#if __IPHONE_OS_VERSION_MAX_ALLOWED >= 70000
    if (IOS7_OR_LATER)
    {
        if ([Context iPhone5])
        {
            CGRect rect=CGRectMake(0,0,320,568);
            return rect;
        }
        else if(IPHONE)
        {
            CGRect rect=CGRectMake(0,0,320,480);
            return rect;
        }
        else
        {
            CGRect rect=CGRectMake(0,0,768,1024);
            return rect;
        }
 
    }
#endif
    
    if ([Context iPhone5])
    {
        CGRect rect=CGRectMake(0,0,320,548);
        return rect;
    }
    else if(IPHONE)
    {
        CGRect rect=CGRectMake(0,0,320,460);
        return rect;
    }
    else
    {
        CGRect rect=CGRectMake(0,0,768,1004);
        return rect;
    }
    
}

- (BOOL) shouldAutorotate
{
    return YES;
}

-(NSUInteger)supportedInterfaceOrientations
{
    return UIInterfaceOrientationMaskAll;
}

@end
